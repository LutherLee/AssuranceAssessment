# Ref: https://dev.to/charlietap/gradle-versions-catalog-integration-27l0
# Ref: https://docs.gradle.org/current/userguide/platforms.html
[versions]
androidDatabaseSqlcipher = "4.5.3"
compileSdk = "34"
targetSdk = "34"
minSdk = "23"

applicationId = "com.luther.github"
appVersionCode = "1"
appVersionName = "1.0"

kotlin = "1.9.10"
androidGradlePlugin = "8.1.1"

jvmTarget = "17"
javaVersion = "17"

# Core
androidx-appcompat = "1.7.0-alpha03"
androidx-core = "1.12.0-rc01"
androidx-legacy = "1.0.0"
annotation = "1.6.0"
constraintLayout = "2.1.4"
devtoolsKSP = "1.9.0-1.0.13"
kotlinxCoroutinesAndroid = "1.7.1"
# View
androidx-activity = "1.7.2"
androidx-fragment = "1.6.1"
# Lifecycle
androidx-lifecycle = "2.6.1"
lifecycleRuntimeKtx = "2.7.0-alpha01"
# Navigation
androidx-navigation = "2.7.1"
# Paging
androidx-paging = "3.2.0"
# Room
androidx-room = "2.5.2"
# WorkManager
androidx-work = "2.8.1"
# Hilt
androidx-hilt = "2.47"
androidx-jetpack-hilt = "1.0.0"
# Profile Installer + Benchmarking
profileInstaller = "1.3.1"
benchmarkMacroJUnit4 = "1.2.0-beta04"
# Test
testJUnit = "4.13.2"
testExtJUnit = "1.1.5"
testUIAutomator = "2.2.0"
testEspresso = "3.5.1"
# Security
securityCrypto = "1.1.0-alpha06"
securityIdentityCredential = "1.0.0-alpha03"
# Play Services + Google Maps
googleServices = "4.3.15"
playServicesAds = "22.3.0"
playServicesAuth = "20.6.0"
playServicesLocation = "21.0.1"
playServicesMaps = "18.1.0"
mapsUtils = "3.5.2"
# Material Design
materialDesign = "1.9.0"
# Retrofit
retrofit = "2.9.0"
retrofit2KotlinCoroutinesAdapter = "0.9.2"
# Diagonal ImageView
diagonalImageview = "1.1.1"
# Swipe Refresh Layout
swiperefreshlayout = "1.1.0"
# Okhttp
okhttp3BOM = "4.11.0"
# Firebase
firebaseBOM = "32.2.3"
# SplashScreen
splashscreen = "1.1.0-alpha01"
# Secrets Gradle Plugin
secretsGradlePlugin = "2.0.1"
# Third Party Libraries
cloudinary = "2.3.1"
floatingSearchView = "2.1.1"
glide = "4.15.1"
glideTransformations = "4.3.0"
timber = "5.0.1"
lottie = "6.1.0"
gson = "2.10.1"
loupe = "1.2.1"
loupeExtension = "1.0.0"
benManesVersions = "0.47.0"
jlleitschuhKtlint = "11.5.1"
balloon = "1.5.4"
leakCanary = "2.12"

[libraries]
# Core
android-database-sqlcipher = { module = "net.zetetic:android-database-sqlcipher", version.ref = "androidDatabaseSqlcipher" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
annotation = { module = "androidx.annotation:annotation", version.ref = "annotation" }
diagonal-imageview = { module = "com.github.santalu:diagonal-imageview", version.ref = "diagonalImageview" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesAndroid" }
legacy-support-v4 = { module = "androidx.legacy:legacy-support-v4", version.ref = "androidx-legacy" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit2-kotlin-coroutines-adapter = { module = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter", version.ref = "retrofit2KotlinCoroutinesAdapter" }
swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swiperefreshlayout" }
tools-build-gradle = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
# View
activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }
# Kotlin
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
# Work Manager
work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-work" }
# Baseline Profile
profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "profileInstaller" }
benchmark-macro-junit4 = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "benchmarkMacroJUnit4" }
# Testing
test-junit = { module = "junit:junit", version.ref = "testJUnit" }
fragment-testing = { module = "androidx.fragment:fragment-testing", version.ref = "androidx-fragment" }
test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "testEspresso" }
test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "testExtJUnit" }
test-uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "testUIAutomator" }
# Lifecycle (ViewModel)
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }
# Navigation
navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidx-navigation" }
navigation-safe-args-gradle-plugin = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "androidx-navigation" }
navigation-testing = { module = "androidx.navigation:navigation-testing", version.ref = "androidx-navigation" }
navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidx-navigation" }
# Paging
paging-guava = { module = "androidx.paging:paging-guava", version.ref = "androidx-paging" }
paging-runtime-ktx = { module = "androidx.paging:paging-runtime-ktx", version.ref = "androidx-paging" }
room-paging = { module = "androidx.room:room-paging", version.ref = "androidx-room"}
# Room
room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidx-room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidx-room" }
# Security
security-crypto = { module = "androidx.security:security-crypto", version.ref = "securityCrypto" }
security-identity-credential = { module = "androidx.security:security-identity-credential", version.ref = "securityIdentityCredential" }
# Play services + Maps
google-services = { module = "com.google.gms:google-services", version.ref = "googleServices" }
play-services-ads = { module = "com.google.android.gms:play-services-ads", version.ref = "playServicesAds" }
play-services-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
maps-utils = { module = "com.google.maps.android:android-maps-utils", version.ref = "mapsUtils" }
# Material Design
material-design = { module = "com.google.android.material:material", version.ref = "materialDesign" }
# OkHttp
okhttp3-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp3BOM" }
okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3BOM" }
okhttp3-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3BOM" }
# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBOM" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-auth = { module = "com.google.firebase:firebase-auth" }
firebase-database = { module = "com.google.firebase:firebase-database" }
firebase-firestore = { module = "com.google.firebase:firebase-firestore" }
firebase-functions = { module = "com.google.firebase:firebase-functions" }
firebase-messaging = { module = "com.google.firebase:firebase-messaging" }
# Hilt
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "androidx-hilt" }
hilt-jetpack-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidx-jetpack-hilt" }
hilt-navigation-fragment = { module = "androidx.hilt:hilt-navigation-fragment", version.ref = "androidx-jetpack-hilt" }
hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "androidx-jetpack-hilt" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "androidx-hilt" }
hilt-android-gradle-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "androidx-hilt"}
# SplashScreen
splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }
# Secrets Gradle Plugin
secrets-gradle-plugin = { module = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin", version.ref = "secretsGradlePlugin"}
# Third party libraries
lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
skydoves-balloon = { module = "com.github.skydoves:balloon", version.ref = "balloon"}
cloudinary = { module = "com.cloudinary:cloudinary-android", version.ref = "cloudinary"}
floatingsearchview = { module = "com.github.arimorty:floatingsearchview", version.ref = "floatingSearchView"}
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide"}
glide-transformations = { module = "jp.wasabeef:glide-transformations", version.ref = "glideTransformations"}
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide"}
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber"}
gson = { module = "com.google.code.gson:gson", version.ref = "gson"}
loupe = { module = "com.igreenwood.loupe:loupe", version.ref = "loupe"}
loupe-extensions = { module = "com.igreenwood.loupe:extensions", version.ref = "loupeExtension"}
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }

[plugins]
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "androidx-hilt" }
hilt-android-plugin = { id = "dagger.hilt.android.plugin", version.ref = "androidx-hilt" }
navigation-safeargs-kotlin  = { id = "androidx.navigation.safeargs.kotlin", version.ref = "androidx-navigation" }
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
ben-manes-versions = { id = "com.github.ben-manes.versions", version.ref = "benManesVersions" }
jlleitschuh-ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "jlleitschuhKtlint" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
kotlin-kapt = { id = "kotlin-kapt", version.ref = "kotlin" }
kotlin-parcelize = { id = "kotlin-parcelize", version.ref = "kotlin" }
devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "devtoolsKSP" }
secrets-gradle-plugin = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secretsGradlePlugin"}
